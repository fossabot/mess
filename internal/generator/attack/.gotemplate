{{- /*
	This is a template file used for code generation with go generate.
	The notices given in the comment below only applies to the files
	generated with this template. This file can be freely edited when
	updating the code generator.
*/ -}}

// Copyright Â© 2022 Rak Laptudirm <rak@laptudirm.com>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go generate; DO NOT EDIT THE CONTENTS OF THIS FILE
// The source code for the generator can be found at generator/attack

package attacks

import (
	"laptudirm.com/x/mess/pkg/chess/bitboard"
	"laptudirm.com/x/mess/pkg/chess/move/attacks/magic"
)

// non-sliding pieces; standard tables

// King contains all the attack sets of a king indexed by it's square.
var King = {{ printf "%#v" .King }}

// Knight contains all the attack sets of a knight indexed by it's square.
var Knight = {{ printf "%#v" .Knight }}

// Pawn contains all the attack sets of a pawn indexed by it's color and 
// square. Note these are the diagonal attack sets, not move sets.
var Pawn = {{ printf "%#v" .Pawn }}

// sliding pieces; magic tables
// these tables are un-exported since utility functions will be declared
// to make probing these tables simpler in the attacks package
var rookTable = {{ printf "%#v" .Rook }}
var bishopTable = {{ printf "%#v" .Bishop }}
